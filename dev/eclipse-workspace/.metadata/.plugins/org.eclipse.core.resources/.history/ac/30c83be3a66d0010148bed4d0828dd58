package basic;

import java.math.BigDecimal;

public class PrimitiveTypes {
	public static void main(String[] args) {
		boolean b = true;
		System.out.println(b);

		byte b2 = 10; // -128 ~ 127 까지
		System.out.println(b2);

		char c = '뷁'; // 2byte 기본, 0 ~ 65535 까지 각 문자가 매핑되어있다.

		int i = 2147483647; // 4byte, -2의 32승 ~ 2의 31승 까지 +- 20억 정도
		int i2 = 2147483647 + 1; // 오류가 나지 않고 가장 작은 수로 순환된다.
		System.out.println(i);

		short sh = 32767; // -32768 ~ 32767
		System.out.println(sh);

		long lo = 214783648L; // 8byte
		System.out.println(lo);

		double d = 3.1415926535; // 8byte
		System.out.println(d);

		float f = 3.1415926535f; // 4byte
		System.out.println(f);

		System.out.println(2 - 1.1);

		BigDecimal bi = new BigDecimal("2");
		System.out.println(bi.subtract(new BigDecimal("1.1")));

	}
}
