<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd" id="WebApp_ID" version="6.0">
  <display-name>springFw</display-name>
  
  <!-- dispatcher servlet이 실행되기 전에 실행되는 filter이다  -->
  <!-- 모든 url에 걸쳐 강제로 UTF-8로 인코딩한다. 이건 레거시로 하면 무조건 있는게 좋음  
  부트는 내장으로 설정되어있어서 안해도 됨 -->
 	 <filter>
	        <filter-name>encodingFilter</filter-name>
	        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
	        <init-param>
	            <param-name>encoding</param-name>
	            <param-value>UTF-8</param-value>
	        </init-param>
	        <init-param>
	            <param-name>forceEncoding</param-name>
	            <param-value>true</param-value>
	        </init-param>
  	</filter>
    <filter-mapping>
	        <filter-name>encodingFilter</filter-name>
	        <url-pattern>/*</url-pattern>
    </filter-mapping>

		<!-- spring context 경로  - 서블리 외의 모든 것들은 여기에넣으면 된다 -->
  <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            <!-- /WEB-INF/spring/mvc02/root-context.xml -->
            /WEB-INF/spring/fileupload/root-context.xml
        </param-value>
    </context-param>
    
   			 <!-- 컨텍스트 로드 리스너로 더 확실한 실행환경을 제공   -->
    <listener>
     	   <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    	
  				  <!--Dispatcher Servlet 설정 : 경로 외에 크게 변동되는거 없음   -->
    <servlet>
        <servlet-name>appServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
<!--                 /WEB-INF/spring/mvc02/servlet-context.xml -->
                 /WEB-INF/spring/fileupload/servlet-context.xml
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup> <!-- 얘 먼저 실행해라  -->

        <!-- spring 6.x -->
        <multipart-config>
            <max-file-size>31457280</max-file-size>   <!-- 30mb-->
            <max-request-size>1004857600</max-request-size>  <!-- 100mb -->
        </multipart-config>
    </servlet>
    
    <!-- appServlet에 모든 url을 매핑하겠다   -->
    <servlet-mapping>
        <servlet-name>appServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <!-- 에러 페이지를 등록해준다 단, 이렇게 등록을 하면 에러메세지가 뜨지않기 때문에 
    개발 중에는 사용하지 않고 시연 시, 사용한다   -->
<!--     <error-page>
    	<error-code>500</error-code>
    	<location>/WEB-INF/views/mvc02/error/runtime.jsp</location>
    </error-page>
        <error-page>
    	<error-code>404</error-code>
    	<location>/WEB-INF/views/mvc02/error/runtime.jsp</location>
    </error-page>
     -->
    
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.xhtml</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.xhtml</welcome-file>
  </welcome-file-list>
</web-app>